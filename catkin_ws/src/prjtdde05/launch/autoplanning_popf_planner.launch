<?xml version="1.0"?>
<launch>

  	<!--<arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle]"/>-->

	<!-- Arguments -->

	<arg name="domain_path"	default="$(find prjtdde05)/common/popf_planner_files/domain_turtlebot_demo.pddl" />
	<arg name="problem_path" default="$(find prjtdde05)/common/popf_planner_files/problem1vic.pddl" />

	<arg name="action_duration"		default="1.0" />
	<arg name="action_probability"	default="1.0" />
	<arg name="knowledge_base"		default="rosplan_knowledge_base" />
	<arg name="action_dispatch_topic"	default="/rosplan_plan_dispatcher/action_dispatch" />
	<arg name="action_feedback_topic"	default="/rosplan_plan_dispatcher/action_feedback" />


	<!-- Knowledge base -->
	<node name="rosplan_knowledge_base" pkg="rosplan_knowledge_base" type="knowledgeBase" respawn="false" output="screen">
		<param name="domain_path" value="$(arg domain_path)" />
		<param name="problem_path" value="$(arg problem_path)" />
		<param name="database_path" value="$(find rosplan_knowledge_base)/common/mongoDB/" />
		<!-- conditional planning flags -->
		<param name="use_unknowns" value="false" />
	</node>

	<!-- Problem generation --> 
	<include file="$(find rosplan_planning_system)/launch/includes/problem_interface.launch">
		<arg name="knowledge_base"   value="rosplan_knowledge_base" />
		<arg name="domain_path"      value="$(arg domain_path)" />
		<arg name="problem_path"     value="$(arg problem_path)" />
		<arg name="problem_topic"    value="problem_instance" />
	</include>
	
	<!-- Scene database (MongoDB) -->

	<include file="$(find mongodb_store)/launch/mongodb_store.launch">
		<arg name="db_path" value="$(find rosplan_knowledge_base)/common/mongoDB/"/>
	</include>


	<!-- Planner interface -->
	<include file="$(find rosplan_planning_system)/launch/includes/planner_interface.launch">
		<arg name="use_problem_topic"    value="true" />
		<arg name="problem_topic"        value="/rosplan_problem_interface/problem_instance" />
		<arg name="planner_topic"        value="planner_output" />
		<arg name="domain_path"          value="$(arg domain_path)" />
		<arg name="problem_path"         value="$(arg problem_path)" />
		<arg name="data_path"            value="$(find prjtdde05)/common/popf_planner_files/" />
		<arg name="planner_command"      value="$(find rosplan_planning_system)/common/bin/popf DOMAIN PROBLEM" />  <!-- removed 'timeout 10 '-->
	</include>		
	
	<!-- Plan parsing --> 
	<node name="rosplan_parsing_interface" pkg="rosplan_planning_system" type="pddl_simple_plan_parser" respawn="false" output="screen">
		<param name="knowledge_base" value="rosplan_knowledge_base" />
		<param name="planner_topic"  value="/rosplan_planner_interface/planner_output" />
		<param name="plan_topic"     value="complete_plan" />
	</node>

	<!-- Plan dispatching --> 
	<node name="rosplan_plan_dispatcher" pkg="rosplan_planning_system" type="pddl_simple_plan_dispatcher" respawn="false" output="screen">
		<param name="knowledge_base"        value="rosplan_knowledge_base" />
		<param name="plan_topic"            value="/rosplan_parsing_interface/complete_plan" />
		<param name="action_dispatch_topic" value="action_dispatch" />
		<param name="action_feedback_topic" value="action_feedback" />
	</node>
	
	<!-- rpsimplemapServer [ROSPlan's own generic map service]: to load waypoints from a file -->

	<node name="rosplan_roadmap_server" pkg="rosplan_interface_mapping" type="rpsimplemapServer" respawn="false" output="screen">
		<param name="data_path" value="$(find prjtdde05)/common/popf_planner_files/" />
		<param name="waypoint_file" value="$(find prjtdde05)/common/popf_planner_files/waypoints.txt" />
		<param name="fixed_frame" value="map" />  
	
	</node>

	
	<!-- Non-Simulated / Enforcer Action -->


	<!-- fly-with-carrier -->   
	<node name="rosplan_interface_FLY_WITH_CARRIER" pkg="prjtdde05" type="enforcerlib" respawn="false" output="screen">  
		<param name="knowledge_base" value="$(arg knowledge_base)" />
		<!--<param name="action_server" value="/move_base" />-->
		<param name="pddl_action_name" value="flywithcarrier" />
		<param name="action_dispatch_topic" value="$(arg action_dispatch_topic)" />
		<param name="action_feedback_topic" value="$(arg action_feedback_topic)" />
		<!--<param name="action_duration" value="60" />-->        
		<!--<param name="action_probability" value="$(arg action_probability)" />-->

	</node>


	<!-- Simulated Actions -->

	
	<!-- pick -->
	<node name="rosplan_interface_PICK" pkg="prjtdde05" type="enforcerlib" respawn="false" output="screen">
		<param name="knowledge_base" value="$(arg knowledge_base)" />
		<!--<param name="action_server" value="/move_base" /> -->
		<param name="pddl_action_name" value="pick" />
		<param name="action_dispatch_topic" value="$(arg action_dispatch_topic)" />
		<param name="action_feedback_topic" value="$(arg action_feedback_topic)" />
		<param name="action_duration" value="$(arg action_duration)" />
		<param name="action_probability" value="$(arg action_probability)" />

	</node>

	<!-- load_crate -->
	<node name="rosplan_interface_LOAD_CRATE" pkg="prjtdde05" type="enforcerlib" respawn="false" output="screen">
		<param name="knowledge_base" value="$(arg knowledge_base)" /> 
		<!-- <param name="action_server" value="/move_base" /> -->
		<param name="pddl_action_name" value="load_crate" />
		<param name="action_dispatch_topic" value="$(arg action_dispatch_topic)" />
		<param name="action_feedback_topic" value="$(arg action_feedback_topic)" />
		<param name="action_duration" value="$(arg action_duration)" />
		<param name="action_probability" value="$(arg action_probability)" />

	</node>

	<!-- unload_crate -->
	<node name="rosplan_interface_UNLOAD_CRATE" pkg="prjtdde05" type="enforcerlib" respawn="false" output="screen">
		<param name="knowledge_base" value="$(arg knowledge_base)" />
		<!--<param name="action_server" value="/move_base" /> -->
		<param name="pddl_action_name" value="unload_crate" />
		<param name="action_dispatch_topic" value="$(arg action_dispatch_topic)" />
		<param name="action_feedback_topic" value="$(arg action_feedback_topic)" />
		<param name="action_duration" value="$(arg action_duration)" />
		<param name="action_probability" value="$(arg action_probability)" />

	</node>

	<!-- drop -->
	<node name="rosplan_interface_DROP" pkg="prjtdde05" type="enforcerlib" respawn="false" output="screen">
		<param name="knowledge_base" value="$(arg knowledge_base)" /> 
		<!--<param name="action_server" value="/move_base" /> -->
		<param name="pddl_action_name" value="drop" />
		<param name="action_dispatch_topic" value="$(arg action_dispatch_topic)" />
		<param name="action_feedback_topic" value="$(arg action_feedback_topic)" />
		<param name="action_duration" value="$(arg action_duration)" />
		<param name="action_probability" value="$(arg action_probability)" />

	</node>


</launch>

